
#include <bits/stdc++.h>
using namespace std;

struct node{
  int data;
  struct node *next;
};
struct node *end;

void begin(struct node **head,int data){
   struct node *newnode=(struct node *)malloc(sizeof(struct node));
   newnode->data=data;
   newnode->next=NULL;

  if(*head==NULL){
    *head=newnode;
    return;
  }

  newnode->next=*head;
  *head=newnode;

  return;
}

void display(struct node *head){
   struct node *temp=head;

   while(temp!=NULL){
    cout<<temp->data<<" ";
    temp=temp->next;
   }
   cout<<endl;
}
void reverse(struct node **head)
{
    // Initialize prev and current pointers
    struct node *prev = NULL, *curr = *head, *next;

    while (curr)
    {
        next = curr->next;
        curr->next = prev;
        prev = curr;
        curr = next;
    }

    *head = prev;
}

struct node * findmiddle(struct node *head){
   struct node *prev=head,*curr=head;

    if(head==NULL)
    return 0;

   while(curr!=NULL && curr->next!=NULL){
     prev=prev->next;
     curr=curr->next->next;
   }
   return prev;
}

void rearrange(struct node *head){
   struct node *head1=head;
   struct node *slow=findmiddle(head);
   struct node *head2=slow->next;
    slow->next=NULL;

   reverse(&head2);

    struct node *temp=NULL;

   while(head1 && head2 && head1->next ){
     temp=head2->next;
     head2->next=head1->next;
     head1->next=head2;
     head2=temp;
     head1=head1->next->next;
   }

}

int main(){
  struct node *head=NULL;
  int n;
  cin>>n;
  for(int i=0;i<n;i++){
   int d;
   cin>>d;
   begin(&head,d);
  }

  display(head);
  rearrange(head);
  display(head);

 return 0;
}
